name: Manual full deploy to Dokku (via VPN)

on:
  workflow_dispatch:   # allows triggering manually in GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: VPN Connect
        uses: igdevx/vpn-connect@v1
        id: vpn
        with:
          vpn_gateway: ${{ secrets.VPN_GATEWAY }}
          vpn_psk: ${{ secrets.VPN_PSK }}
          vpn_username: ${{ secrets.VPN_USERNAME }}
          vpn_password: ${{ secrets.VPN_PASSWORD }}
          vpn_nt_domain: ${{ secrets.VPN_NT_DOMAIN }}
          vpn_ike: ${{ secrets.VPN_IKE }}
          vpn_esp: ${{ secrets.VPN_ESP }}
      
      - name: VPN route IP setup
        run: |
          HOST_IP=$(nslookup ${{ secrets.DOKKU_HOST }} | awk '/^Address: / { print $2 }' | tail -n1)
          IFACE="${{ steps.vpn.outputs.ppp_interface }}"

          sudo ip route add "$HOST_IP" dev "$IFACE"
      
      - name: SSH key setup
        run: |
          mkdir -p ~/.ssh
          cat <<EOF > ~/.ssh/id_ed25519
          ${{ secrets.DOKKU_SSH_KEY }}
          EOF
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.DOKKU_HOST }}" >> ~/.ssh/known_hosts || { echo "‚ùå ssh-keyscan failed"; exit 1; }
      
      - name: Deploy all services
        run: |
          echo "üîπ Deploying all services from manifest..."
          
          MANIFEST=$(yq eval -o=json '.services' deployment-manifest.yaml)
          for service in $(echo "$MANIFEST" | jq -r 'keys[]'); do
            IMAGE=$(echo "$MANIFEST" | jq -r ".\"$service\"")
            echo "Deploying $service with image $IMAGE"

            ssh dokku@${{ secrets.DOKKU_HOST }} git:from-image $service $IMAGE
          done

          echo "‚úÖ All services deployed!"

      - name: Disconnect VPN
        if: always()
        uses: igdevx/vpn-disconnect@v0.1
